% test RL-based cost function derivations with the original files generated by PC

% clear all;
clc;
tic;

overwriteFiles = 1;

%% Define internal settings
configFilePath = '../Data_json/LinConfig/IOC_IITFatigue_Subj1_demo.json';

saveSuffix = 'demo';
% savePath = sprintf('D:/results/fatigue_ioc01_weightsIndividual/%s/', saveSuffix);
savePath = sprintf('C:/results/ioc/Data/IOC/%s/', saveSuffix);

%% Set up internal parameters
% Add paths to directories with model definition and util functions
setPaths();

% Load json file with list of all trials on which IOC will be run
configFile = jsondecode(fileread(configFilePath));
n = length(configFile.Files);

for i=1:n
    runParam = [];
    configFileI = configFile.Files(i);

    % if the source matfile is not found in the json path, search these
    % following locations as well, such as for Sharcnet deployment
    potentialBasePaths = {'D:/aslab/data_IK', ...
        'D:/aslab_svn/data_IK', ...
        configFileI.basepath};
    
    % load the specific trialinfo
    fprintf("Processing %s file \n", configFileI.runName);
    trialInfo = loadTrialInfo(configFileI, configFile, potentialBasePaths, configFilePath);

    % does the target folder already exist? 
    subsavePath = fullfile(savePath, trialInfo.runName);
    [status, alreadyExist] = checkMkdir(subsavePath);
    
    if ~alreadyExist || overwriteFiles
        IOCRun(trialInfo, subsavePath);
%         IOCIncomplete(trialInfo,savePath)
    end
end

toc